{"version":3,"sources":["components/form/favFoodSchema.ts","context/context.js","components/FavFood.tsx","components/PersonalInfoStyles.ts","utils/israeliIdValidator.ts","components/form/personalInfoSchema.ts","components/PersonalInfo.tsx","store/actions.ts","components/TabBarHome.tsx","components/AppBarHomeStyles.ts","components/AppBarHome.tsx","components/HomePage.tsx","components/LoginPageStyles.ts","components/LoginPage.tsx","AppRouter.tsx","store/userReducer.ts","store/store.ts","App.tsx","index.tsx"],"names":["schema","yup","shape","other","max","AppContext","React","createContext","FavFood","userInfo","useSelector","state","user","history","useHistory","useContext","userId","email","setFoodList","foodList","setFoodPref","foodPref","useEffect","a","axios","get","data","fetchData","useState","setOther","setOtherText","userMes","setUserMes","checkedList","setCheckedList","useForm","resolver","yupResolver","defaultValues","foods","register","handleSubmit","watch","errors","control","otherValue","setValue","validateForm","length","otherText","some","food","name","addOther","post","newFoodData","value","id","onSubmit","console","log","Object","keys","newUser","foodPrefWithOther","push","put","updatedUser","map","Grid","item","xs","render","props","Checkbox","checked","checkedItem","color","onChange","newFoods","filter","handleCheckedChange","container","spacing","e","target","TextField","label","InputLabelProps","shrink","inputRef","variant","message","Button","type","form","useStyles","makeStyles","theme","logo","maxWidth","root","flexGrow","formField","direction","marginLeft","marginRight","width","menuItem","legend","textAlign","isIsraeliIdValid","strId","String","trim","rawVal","counter","i","Number","alphaRegex","matches","required","lastName","birthDate","Date","beer","idNum","test","phone","beers","PersonalInfo","dispatch","useDispatch","classes","setTab","reset","params","foodData","birthDateValue","min_date","moment","subtract","className","dir","error","Boolean","newValue","isBefore","FormControl","InputLabel","Select","autoWidth","beerItem","MenuItem","TabPanel","children","index","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","backgroundColor","palette","background","paper","TabBarHome","tab","AppBar","position","Tabs","event","aria-label","Tab","disabled","AppBarHome","setUser","location","useLocation","justify","alignItems","display","flexDirection","padding","src","alt","pathname","clientId","process","buttonText","onLogoutSuccess","HomePage","alignContent","LoginPage","setEmail","setUserId","localStorage","getItem","res","status","userData","onSuccess","response","profileObj","setItem","onFailure","err","cookiePolicy","responseType","AppRouter","path","component","exact","initalState","persistConfig","key","storage","persistedReducer","persistReducer","action","store","createStore","persistor","persistStore","App","formError","setFormError","contextValues","loggedInUser","loggedInUserEmail","Provider","loading","jss","create","plugins","jssPreset","rtl","createMuiTheme","ReactDOM","StrictMode","StylesProvider","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0d077a3d.chunk.js","sourcesContent":["import * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    other: yup.string()\r\n        .max(50)\r\n});\r\n\r\nexport default schema;","import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport { AppContext as default };","import axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { TextField, Button, Checkbox, Grid } from '@material-ui/core';\r\n\r\nimport User from '../models/User';\r\nimport Food from '../models/Food';\r\nimport UserState from '../models/UserState';\r\nimport FavFoodFormData from '../models/FavFoodFormData';\r\n\r\nimport schema from './form/favFoodSchema';\r\nimport AppContext from '../context/context';\r\n\r\nconst FavFood = () => {\r\n    \r\n    const userInfo = useSelector<UserState, User>((state) => state.user);\r\n    const history = useHistory();\r\n\r\n    const { userId, email,\r\n        setFoodList, foodList,\r\n        setFoodPref, foodPref,\r\n    } = useContext(AppContext);\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const data = await axios.get('/food')\r\n            setFoodList(data.data); \r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const [other, setOther] =  useState(false);\r\n    const [otherText, setOtherText] = useState('');\r\n    const [userMes, setUserMes] = useState('');\r\n    const [checkedList, setCheckedList] = useState(foodPref);\r\n\r\n    const handleCheckedChange = (food: {name: string, value: number}) => {\r\n        if (checkedList.some((checkedItem: Food) => checkedItem.name === food.name)) {\r\n            const newFoods = checkedList.filter((checkedItem: Food) => checkedItem.name !== food.name )\r\n            setCheckedList(newFoods);\r\n            return newFoods\r\n        } else {\r\n            const newFoods = [...checkedList, {name: food.name, value: food.value}]\r\n            setCheckedList(newFoods);\r\n            return newFoods\r\n        }\r\n    };\r\n\r\n    const { register, handleSubmit, watch, errors, control, setValue } = useForm<FavFoodFormData>({\r\n        resolver: yupResolver(schema),\r\n        defaultValues: {foods: foodPref}\r\n    });\r\n    const otherValue = watch('other');\r\n\r\n    const validateForm = async (data: FavFoodFormData) => {\r\n        if (data.foods.length === 0 && data.other === 'false') {\r\n            setUserMes('יש לבחור לפחות העדפת אוכל אחת')\r\n            return false\r\n        } else if (data.other === 'true') {\r\n            if (data.otherText === ''){\r\n                setUserMes('אם שדה אחר מסומן, יש למלא ערך')\r\n                return false\r\n            } else if (foodList.some((food: Food) => food.name === data.otherText)){\r\n                setUserMes('מאכל זה כבר קיים ברשימה, אנא סמן אותו ומחק את אופציית אחר')\r\n                return false\r\n            } else{\r\n                return true\r\n            }\r\n        } else {\r\n            return true\r\n        }\r\n    };\r\n\r\n    const addOther = async (data: FavFoodFormData) => {\r\n        if (data.other === 'true') {\r\n            const newFoodData = await axios.post('/food', {other: data.otherText})\r\n            return ([...data.foods, {name: data.otherText, value: newFoodData.data.id}]);\r\n        } else {\r\n            return data.foods\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (data:FavFoodFormData) => {\r\n        setUserMes('')\r\n        console.log('FavFoodData', data);\r\n        if (Object.keys(errors).length === 0 || errors == null){\r\n            setOther(data.other === 'true' ? true : false);\r\n            setOtherText(typeof data.otherText === 'string' ? data.otherText : '')\r\n            setFoodPref(data.foods);\r\n        }\r\n        const formValid = await validateForm(data)\r\n        if (formValid) {\r\n            if (!userId){\r\n                try {\r\n                    const newUser = await axios.post('/user', {...userInfo, email})\r\n                    const userId = newUser.data.userId; \r\n                    const foodPrefWithOther = await addOther(data);\r\n                    await axios.post('/foodPref', {\r\n                        userId,\r\n                        foodPref: foodPrefWithOther\r\n                    })\r\n                    setUserMes('משתמש נוצר')\r\n                    history.push('/home');\r\n                } catch (e) {\r\n                    setUserMes('אחד מהשדות חסר!')\r\n                }\r\n            } else {\r\n                try {\r\n                    const updatedUser = await axios.put('/user', {...userInfo, email})\r\n                    const userId = updatedUser.data.userId; \r\n                    const foodPrefWithOther = await addOther(data);\r\n                    await axios.put('/foodPref', {\r\n                        userId,\r\n                        foodPref: foodPrefWithOther\r\n                    })\r\n                    setUserMes('משתמש עודכן')\r\n                    history.push('/home');\r\n                } catch (e) {\r\n                    setUserMes('אחד מהשדות חסר!')\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)} id='favFood'>\r\n                {foodList.map((food: Food) => (\r\n                    <Grid item xs={3}>\r\n                        <Controller\r\n                            control={control}\r\n                            name='foods'\r\n                            render={props => \r\n                                <Checkbox\r\n                                    name={food.name}\r\n                                    value={food.value}\r\n                                    checked={checkedList.some((checkedItem: Food) => checkedItem.name === food.name)}\r\n                                    color='primary'\r\n                                    onChange={() => props.onChange(handleCheckedChange({name: food.name, value: food.value}))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <label>{food.name}</label>\r\n                    </Grid>\r\n                ))}\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={3}>\r\n                        <Controller\r\n                            control={control}\r\n                            name='other'\r\n                            render={props => \r\n                                <Checkbox\r\n                                    name='other'\r\n                                    id='other'\r\n                                    onChange={(e) => props.onChange(e.target.checked)}\r\n                                    checked={props.value}\r\n                                />\r\n                            }\r\n                        />\r\n                        <label>אחר</label>\r\n                    </Grid>\r\n                    {otherValue &&\r\n                        <Grid item xs={3}>\r\n                            <TextField\r\n                                name='otherText'\r\n                                label='אוכל אחר'\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                inputRef={register}\r\n                                id='otherText'\r\n                                variant='outlined'\r\n                            />\r\n                            <p>{errors.other?.message}</p>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={3}>\r\n                        <Button \r\n                        variant='contained' \r\n                        type='submit' \r\n                        form='favFood'\r\n                        >\r\n                            סיום\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                {userMes !== '' && \r\n                        <p>{userMes}</p> \r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FavFood;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    logo: {\r\n        maxWidth: 80,\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    formField: {\r\n        direction: 'rtl',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 225,\r\n    },\r\n    menuItem: {\r\n        direction: 'rtl',\r\n        width: 225,\r\n    },\r\n    legend:{\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","const isIsraeliIdValid = (id: string | null | undefined): boolean => {\r\n    let strId = String(id).trim();\r\n    if (strId.length > 9) {\r\n        return false;\r\n    }\r\n    if (strId.length < 9) {\r\n        while (strId.length < 9) strId = \"0\" + strId;\r\n    }\r\n    let counter = 0, rawVal, actualVal;\r\n    for (let i = 0; i < strId.length; i++) {\r\n        rawVal = Number(strId[i]) * ((i % 2) + 1);\r\n        actualVal = rawVal > 9 ? (rawVal - 9) : rawVal;\r\n        counter += actualVal;\r\n    }\r\n    return (counter % 10 === 0);\r\n};\r\n export default isIsraeliIdValid;","import * as yup from 'yup';\r\n\r\nimport isIsraeliIdValid from '../../utils/israeliIdValidator';\r\n\r\nconst phoneRegExp = /^\\+?(972|0)(\\-)?0?(([23489]{1}\\d{7})|[5]{1}\\d{8})$/;\r\nconst alphaRegex = /^[a-z\\u0590-\\u05fe]+$/i;\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string()\r\n        .matches(alphaRegex, 'Name is not valid')\r\n        .max(50)\r\n        .required(),\r\n    lastName: yup.string()\r\n        .matches(alphaRegex, 'Last Name is not valid')\r\n        .max(50)\r\n        .required(),\r\n    birthDate: yup.date()\r\n        .max(new Date())\r\n        .required(),\r\n    beer: yup.string(),\r\n    idNum: yup.string()\r\n        .test('israeliId', 'ID is not valid', function (value) {\r\n            return isIsraeliIdValid(value)\r\n        })\r\n        .required(),\r\n    phone: yup.string()\r\n        .matches(phoneRegExp, 'Phone number is not valid')\r\n        .required(),\r\n});\r\n\r\nexport default schema;","import axios from 'axios';\r\nimport moment from 'moment';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TextField, Select, MenuItem, InputLabel, FormControl, Button, Grid, makeStyles } from '@material-ui/core';\r\n\r\nimport User from '../models/User';\r\nimport UserState from '../models/UserState';\r\nimport PersonalInfoFormData from '../models/PersonalInfoFormData';\r\n\r\nimport AppContext from '../context/context';\r\nimport useStyles from './PersonalInfoStyles';\r\nimport { updateUser } from '../store/actions';\r\nimport schema from './form/personalInfoSchema';\r\n\r\nconst beers: string[] = ['APA', 'Ale', 'Lager'];\r\n\r\nconst PersonalInfo = () => {\r\n\r\n    const userInfo = useSelector<UserState, User>((state) => state.user)\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles();\r\n    const {\r\n        userId, setFoodPref, setTab\r\n    } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        reset(userInfo)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            // get user foodPrefs\r\n            const foodData = await axios.get('/foodPref', { \r\n                params:{userId}\r\n            });\r\n            setFoodPref(foodData.data);\r\n        }\r\n        if (userId){\r\n            fetchData()\r\n        }\r\n    }, [userId]);\r\n    \r\n    const { register, handleSubmit, watch, errors, control, setValue, reset,  } = useForm<PersonalInfoFormData>({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const birthDateValue = watch('birthDate');\r\n\r\n    const onSubmit = (data:PersonalInfoFormData) => {\r\n        console.log('PersonalInfoData:', data);\r\n        if (Object.keys(errors).length === 0){\r\n            dispatch(updateUser({...data}))\r\n            setTab(1);\r\n        }\r\n    };\r\n\r\n    let min_date = moment().subtract(18, 'years');\r\n\r\n    return(\r\n        <div className={classes.root} dir='rtl'>\r\n            <form onSubmit={handleSubmit(onSubmit)} id='personalInfo'>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={3}>\r\n                        <TextField\r\n                            className={classes.formField}\r\n                            name='name'\r\n                            error={Boolean(errors.name)}\r\n                            label='שם פרטי'\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            inputRef={register}\r\n                            id='name'\r\n                            variant='outlined'\r\n                        />\r\n                        <p>{errors.name?.message}</p>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <TextField\r\n                            className={classes.formField}\r\n                            name='lastName'\r\n                            label='שם משפחה'\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            inputRef={register}\r\n                            required\r\n                            id='lastName'\r\n                            variant='outlined'\r\n                        />\r\n                        <p>{errors.lastName?.message}</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={3}>\r\n                        <Controller\r\n                            name='birthDate'\r\n                            control={control}\r\n                            render={props =>\r\n                                <TextField\r\n                                    className={classes.formField}\r\n                                    name='birthDate'\r\n                                    id='birthDate'\r\n                                    label='תאריך לידה'\r\n                                    type='date'\r\n                                    variant='outlined'\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    onChange={(newValue) => props.onChange(newValue)}\r\n                                    value={props.value}\r\n                                />\r\n                            }\r\n                        />\r\n                        <p>{errors.birthDate?.message}</p>\r\n                    </Grid>\r\n                    {moment(birthDateValue).isBefore(min_date) &&\r\n                        <Grid item xs={3}>\r\n                            <Controller\r\n                                name='beer'\r\n                                control={control}\r\n                                render={props =>\r\n                                    <FormControl variant='outlined'>\r\n                                        <InputLabel id='beer-label'>מה הבירה האהובה עלייך?</InputLabel>\r\n                                        <Select\r\n                                            className={classes.formField}\r\n                                            id='beer'\r\n                                            name='beer'\r\n                                            onChange={(newValue) => props.onChange(newValue)}\r\n                                            value={props.value}\r\n                                            label='מה הבירה האהובה עלייך?'\r\n                                            autoWidth={true}\r\n                                        >\r\n                                            {beers.map((beerItem) => (\r\n                                                <MenuItem className={classes.menuItem} value={beerItem}>{beerItem}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>                                    \r\n                                }\r\n                            />\r\n                        <p>{errors.beer?.message}</p>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={3}>\r\n                        <TextField\r\n                            className={classes.formField}\r\n                            name='idNum'\r\n                            label='ת.ז'\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            required\r\n                            id='idNum'\r\n                            variant='outlined'\r\n                            inputRef={register}\r\n                        />\r\n                        <p>{errors.idNum?.message}</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={3}>\r\n                        <TextField\r\n                            className={classes.formField}\r\n                            name='phone'\r\n                            label='טלפון'\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            required\r\n                            id='phone'\r\n                            variant='outlined'\r\n                            inputRef={register}\r\n                        />\r\n                        <p>{errors.phone?.message}</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={3}>\r\n                        <Button \r\n                            variant='contained' \r\n                            type='submit' \r\n                            form='personalInfo'\r\n                        >\r\n                            המשך\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalInfo;\r\n\r\n\r\n","import User from '../models/User';\r\nimport UserAction from '../models/UserAction';\r\n\r\nexport const getUser = (user: User):UserAction => ({\r\n    type: 'GET_USER',\r\n    user\r\n});\r\n\r\nexport const updateUser = (user: User):UserAction => ({\r\n    type: 'UPDATE_USER',\r\n    user\r\n})","import PropTypes from 'prop-types';\r\nimport React, { useContext } from 'react';\r\nimport { Tab, Box, Tabs, AppBar, Typography, makeStyles } from '@material-ui/core';\r\n\r\nimport TabPanelProps from '../models/TabPanelProps';\r\n\r\nimport FavFood from './FavFood';\r\nimport PersonalInfo from './PersonalInfo';\r\nimport AppContext from '../context/context';\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n        <div\r\n            role='tabpanel'\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n        >\r\n        {value === index && (\r\n            <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n            </Box>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n  \r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n  \r\nfunction a11yProps(index: number) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n  \r\nconst TabBarHome = () => {\r\n\r\n    const classes = useStyles();\r\n    const { tab, setTab } = useContext(AppContext);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n    };\r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position='static'>\r\n            <Tabs value={tab} onChange={handleChange} aria-label='simple tabs example'>\r\n                <Tab label='פרטים אישיים' {...a11yProps(0)} />\r\n                <Tab label='מאכלים אהובים' {...a11yProps(1)} disabled />\r\n            </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={tab} index={0}>\r\n                <PersonalInfo/>\r\n            </TabPanel>\r\n            <TabPanel value={tab} index={1}>\r\n                <FavFood/>\r\n            </TabPanel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TabBarHome;","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    logo: {\r\n        maxWidth: 80,\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React, { useContext } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { AppBar, Typography } from '@material-ui/core';\r\n\r\nimport useStyles from './AppBarHomeStyles';\r\nimport AppContext from '../context/context';\r\n\r\nconst clientId = process.env.REACT_APP_CLIENT_ID ? process.env.REACT_APP_CLIENT_ID : '';\r\n\r\nconst AppBarHome = () => {\r\n\r\n    const classes = useStyles();\r\n    const { user, setUser } = useContext(AppContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const logout = () => {\r\n        setUser('')\r\n        history.push('/');\r\n    }; \r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position='static' color=\"secondary\">\r\n                <Grid\r\n                    justify='space-between' \r\n                    container \r\n                    alignItems='center'\r\n                >\r\n                    <Grid item>\r\n                        <Box display='flex' flexDirection='row' alignItems='center' padding={1}>\r\n                            <img src='\\logo.png' alt='u ate it logo' className={classes.logo}/>\r\n                            <Typography variant='h6'>\r\n                                אכלת אותה\r\n                            </Typography>\r\n                        </Box>\r\n                    </Grid>\r\n                    {location.pathname !== '/' &&\r\n                    <Grid item>\r\n                        <Box display='flex' flexDirection='row' alignItems='center' padding={1}>\r\n                            <Typography color='inherit' variant='h6'>\r\n                                שלום לך {user}\r\n                            </Typography>\r\n                            <GoogleLogout\r\n                                clientId={clientId}\r\n                                buttonText='Logout'\r\n                                onLogoutSuccess={logout}\r\n                            >\r\n                            </GoogleLogout>\r\n                        </Box>\r\n                    </Grid>\r\n                    }\r\n                </Grid>\r\n            </AppBar>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBarHome;\r\n","import TabBarHome from './TabBarHome';\r\nimport AppBarHome from './AppBarHome';\r\n\r\nconst HomePage = () => {\r\n    return(\r\n        <div>\r\n            <AppBarHome/>\r\n            <TabBarHome/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        alignContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import axios from 'axios';\r\nimport React, { useContext } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\r\n\r\nimport AppBarHome from './AppBarHome';\r\nimport useStyles from './LoginPageStyles';\r\nimport { getUser } from '../store/actions';\r\nimport AppContext from '../context/context';\r\n\r\nconst clientId = process.env.REACT_APP_CLIENT_ID ? process.env.REACT_APP_CLIENT_ID : '';\r\n\r\nconst LoginPage = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const {\r\n        setUser, \r\n        setEmail, \r\n        setUserId, \r\n        setTab\r\n    } = useContext(AppContext);  \r\n\r\n    const fetchData = async () => {\r\n        const res = await axios.get('/user',{\r\n            params: { email: localStorage.getItem('email') }\r\n            });\r\n        if (res.status === 200) {\r\n            if (res.data.userId === 'newUser'){\r\n                setTab(0);\r\n                history.push(\"/home\");\r\n            } else {\r\n                //if user exists sets his data to state\r\n                dispatch(getUser({...res.data.userData}))\r\n                setUserId(res.data.userData.id)\r\n                setTab(0);\r\n                history.push(\"/home\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const login = (response: GoogleLoginResponseOffline | GoogleLoginResponse) => {\r\n        if (\"profileObj\" in response){\r\n            setUser(response.profileObj.name);\r\n            setEmail(response.profileObj.email)\r\n            localStorage.setItem('user', response.profileObj.name)\r\n            localStorage.setItem('email', response.profileObj.email)\r\n            fetchData();\r\n        }\r\n    }\r\n\r\n    const handleLoginFailure = (err: any) => {\r\n        console.log(err)\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <AppBarHome/>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                    <Typography variant='h5'>ברוכים הבאים לאכלת אותה! בואו נתחבר ומיד נתחיל...</Typography>\r\n                    <GoogleLogin\r\n                        clientId={clientId}\r\n                        buttonText='Login'\r\n                        onSuccess={login}\r\n                        onFailure={handleLoginFailure}\r\n                        cookiePolicy='single_host_origin'\r\n                        responseType='code,token'\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { LoginPage as default };","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport HomePage from './components/HomePage';\r\nimport LoginPage from './components/LoginPage';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route path=\"/\" component={LoginPage} exact={true} />\r\n                    <Route path=\"/home\" component={HomePage} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport { AppRouter as default };","import UserState from '../models/UserState';\r\nimport UserAction from '../models/UserAction';\r\n\r\nconst initalState = {\r\n    user: {\r\n        name: '',\r\n        lastName: '',\r\n        birthDate: new Date('2014-08-18T21:11:54'),\r\n        beer: '',\r\n        idNum: '',\r\n        phone: ''\r\n    }\r\n};\r\n\r\nexport const userReducer = (state: UserState = initalState, action: UserAction ) => {\r\n    switch(action.type){\r\n        case \"GET_USER\": {\r\n            return {...state, user: action.user}\r\n        }\r\n        case 'UPDATE_USER': {\r\n            return {...state, user: {...state.user, ...action.user}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};","// configureStore.js\r\nimport { createStore } from 'redux'\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\n\r\nimport {userReducer} from './userReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, userReducer)\r\n\r\nexport const store: any = createStore(persistedReducer)\r\nexport const persistor= persistStore(store)\r\n","import { Provider } from 'react-redux';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport Food from './models/Food';\r\n\r\nimport AppRouter from './AppRouter';\r\nimport AppContext from './context/context';\r\nimport { store, persistor} from './store/store';\r\n\r\nconst App = () => {\r\n\r\n    const [user, setUser] = useState<string>('');\r\n    const [userId, setUserId] = useState<number>();\r\n    const [email, setEmail] = useState<string>('');\r\n    const [tab, setTab] = useState<number>(0);\r\n    const [foodList, setFoodList] = useState<Food[]>([]);\r\n    const [foodPref, setFoodPref] = useState<Food[]>([]);\r\n    const [formError, setFormError] = useState<boolean>(false);\r\n\r\n    const contextValues = { \r\n        user, setUser, \r\n        userId, setUserId, \r\n        email, setEmail, \r\n        tab, setTab, \r\n        foodList, setFoodList, \r\n        foodPref, setFoodPref,\r\n        formError, setFormError\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem('user');\r\n        const loggedInUserEmail = localStorage.getItem('email');\r\n        if (loggedInUser && loggedInUserEmail) {\r\n          setUser(loggedInUser);\r\n          setEmail(loggedInUserEmail)\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <AppContext.Provider value={contextValues}>\r\n            <Provider store={store}>\r\n                <PersistGate loading={null} persistor={persistor}>\r\n                    <AppRouter/>\r\n                </PersistGate>\r\n            </Provider>\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport { App as default };","import React from 'react';\nimport rtl from 'jss-rtl';\nimport { create } from 'jss';\nimport ReactDOM from 'react-dom';\nimport { jssPreset } from '@material-ui/styles';\nimport { createMuiTheme, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\n\nimport App from './App';\n\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] })\nconst theme = createMuiTheme({\n    direction: 'rtl', // Both here and <body dir=\"rtl\">\n});\n   \nReactDOM.render(\n    <React.StrictMode>\n        <StylesProvider jss={jss}>\n            <ThemeProvider theme={theme}>\n                <App />\n            </ThemeProvider>\n        </StylesProvider> \n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}